{% extends 'client.html.twig' %}

{% block title %}Réserver une machine{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-primary text-white text-center">
                <h2>Réserver {{ machine.nomMachine }}</h2>
            </div>
            <div class="card-body">
                {{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            {{ form_label(form.dateDebut, 'Date de début', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control shadow-sm', 'id': 'dateDebut'}}) }}
                            {{ form_errors(form.dateDebut) }}
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            {{ form_label(form.dateFin, 'Date de fin', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            {{ form_widget(form.dateFin, {'attr': {'class': 'form-control shadow-sm', 'id': 'dateFin'}}) }}
                            {{ form_errors(form.dateFin) }}
                        </div>
                    </div>
                </div>

                <div class="text-center mt-3">
                    <button type="submit" class="btn btn-success px-4">Réserver</button>
                    <a href="{{ path('app_machine_list') }}" class="btn btn-secondary px-4">Annuler</a>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let datesReservees = JSON.parse('{{ datesReservees|raw }}');
            let dateDebutInput = document.getElementById("dateDebut");
            let dateFinInput = document.getElementById("dateFin");

            function disableReservedDates(input) {
                input.addEventListener("input", function () {
                    let selectedDate = this.value;
                    if (datesReservees.includes(selectedDate)) {
                        alert("Cette date est déjà réservée, veuillez choisir une autre.");
                        this.value = "";
                    }
                });
            }

            disableReservedDates(dateDebutInput);
            disableReservedDates(dateFinInput);
        });
    </script>
{% endblock %}
